###################
### KEYBINDINGS ###
###################

binds {
  allow_workspace_cycles = true
}

# Keysym codes: https://github.com/xkbcommon/libxkbcommon/blob/master/include/xkbcommon/xkbcommon-keysyms.h

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# See https://wiki.hyprland.org/Configuring/Binds/
# Kill active window
bind = $mainMod, W, killactive,

# Launch file manager (dolphin)
bind = $mainMod, E, exec, $fileManager

# Launch application launcher (fuzzel)
bind = $mainMod, space, exec, $menu

# Maximize window
bind = $mainMod, F, fullscreenstate, 1,

# Fullscreen window (covers menu bar)
bind = $mainMod SHIFT, F, fullscreenstate, 2,

# Toggle floating window
bind = $mainMod, V, togglefloating,

# Toggle window pinning
bind = $mainMod SHIFT, P, pin

# Toggle hyprshift
bind = $mainMod SHIFT, bracketleft, exec, hyprshade toggle blue-light-filter

# Super-Tab to switch back and forth between two workspaces
bind = $mainMod, Tab, workspace, previous

# Reload Waybar
bind = $mainMod CONTROL ALT, W, exec, pkill waybar && hyprctl dispatch exec waybar

# Hyprexpo
$key = tab
$mod = alt
$reverse = shift

# alt-tab
# bind = $mod, $key, exec, hyprswitch gui --mod-key $mod --key $key --close mod-key-release --reverse-key=mod=$reverse --sort-recent && hyprswitch dispatch
# bind = $mod $reverse, $key, exec, hyprswitch gui --mod-key $mod --key $key --close mod-key-release --reverse-key=mod=$reverse --sort-recent && hyprswitch dispatch -r
bind = ALT, TAB, exec, ags toggle picker-eDP-1
bind = ALT, TAB, submap, alt-tab
submap=alt-tab
# bind = ALT, TAB, exec, astal cycle-workspace
bind = , Escape, submap, reset
submap=reset


# Screenshot
bind = , print, exec, grim $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"
bind = CONTROL $mainMod, 3, exec, grim $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"

# Screenshot with selection
bind = CTRL, print, exec, grim -g "$(slurp)" $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"
bind = CTRL $mainMod, 4, exec, grim -g "$(slurp)" $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"

# Screenshot with selection
#bind = CTRL SHIFT, print, exec, grim -g "$(slurp)" $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png')

# Exit hyprland
bind = $mainMod CONTROL ALT, M, exit,

# Lock hyprland
bind = $mainMod CONTROL ALT, L, exec, $hyprlock

# Move focus with mainMod + hjkl
bind = $mainMod, H, hy3:movefocus, l
bind = $mainMod, L, hy3:movefocus, r
bind = $mainMod, K, hy3:movefocus, u
bind = $mainMod, J, hy3:movefocus, d

# bind = $mainMod, W, hyprctl dispatch overview:toggle

# Groups
# make a tab group
#bind = $mainMod, T, hy3:makegroup, tab #, toggle
# toggle whether a node belongs to a group (can be a single-node group)
bind = $mainMod, T, hy3:changegroup, toggletab
#bind = $mainMod, T, submap, hy3
#submap=hy3
#bind = , T, hy3:changegroup, toggletab
#bind = , Return, submap, reset
#bind = , Escape, submap, reset
#submap=reset

# Move windows around with mainMod+shift
bind = $mainMod SHIFT, H, hy3:movewindow, l
bind = $mainMod SHIFT, L, hy3:movewindow, r
bind = $mainMod SHIFT, K, hy3:movewindow, u
bind = $mainMod SHIFT, J, hy3:movewindow, d

# Enter resize mode with $mainMod+$
bind = $mainMod, R, submap, resize
submap=resize
bind = , H, resizeactive, -5% 0%
bind = , J, resizeactive, 0% -5%
bind = , K, resizeactive, 0% 5%
bind = , L, resizeactive, 5% 0%
bind = , equal, resizeactive, 5% 5%
bind = , minus, resizeactive, -5% -5%
bind = , Return, submap, reset
bind = , Escape, submap, reset
submap=reset

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move left or right with mainMod + P/N
bind = $mainMod, N, workspace, e+1
bind = $mainMod, P, workspace, e-1

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, grave, togglespecialworkspace, magic
bind = $mainMod SHIFT, grave, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod SHIFT, mouse:272, resizewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys with visual feedback from swayosd
bindel = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise
bindel = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower
bindel = ,XF86AudioMute, exec, swayosd-client --output-volume mute-toggle
bindel = ,XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle
bindel = ,XF86MonBrightnessUp, exec, swayosd-client --brightness=+10
bindel = ,XF86MonBrightnessDown, exec, swayosd-client --brightness=-10

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous


