###################
### KEYBINDINGS ###
###################

binds {
  allow_workspace_cycles = true
}

# Keysym codes: https://github.com/xkbcommon/libxkbcommon/blob/master/include/xkbcommon/xkbcommon-keysyms.h
# See https://wiki.hyprland.org/Configuring/Keywords/
# See https://wiki.hyprland.org/Configuring/Binds/

$mainMod = SUPER # Sets "Windows" key as main modifier

# Kill active window
bind = $mainMod, W, killactive,

# Launch file manager (dolphin)
bind = $mainMod, E, exec, uwsm app -- $fileManager

# Launch application launcher
# Note: Some applications may depend on which python is set at a global level (like gearlever); if an application isn't
# launching from rofi, try setting `pyenv global system`
#bind = $mainMod, space, exec, $rofi -show drun -run-command "uwsm app -- {cmd}"
bind = $mainMod, space, exec, $fuzzel --launch-prefix='uwsm app -- '

# Launch emoji picker
# Not sure which keybinding will stick yet
bind = $mainMod SHIFT, space, exec, $emoji
bind = $mainMod SHIFT, P, exec, $emoji

# Maximize window
bind = $mainMod, F, fullscreenstate, 1,

# Fullscreen window (covers menu bar)
bind = $mainMod SHIFT, F, fullscreenstate, 2,

# Send and retrieve windows from scratchpad
bind = $mainMod, S, exec, ~/.config/hypr/scripts/scratchpad
bind = $mainMod SHIFT, S, exec, ~/.config/hypr/scripts/scratchpad -m "fuzzel -d" -g -l

# Toggle floating window
bind = $mainMod, V, togglefloating,

# Toggle window pinning
bind = $mainMod SHIFT, P, pin

# Cycle wallpaper
bind = $mainMod SHIFT, R, exec, ~/.config/swww/swww_randomize_multi.sh '/home/sboynton/Insync/samlingx@gmail.com/Google Drive/Apps/Desktoppr' && notify-send "Cycled wallpaper"

# End screen recording if one is starting
bind = $mainMod ALT, P, exec, pkill wf-recorder && notify-send "Stopped screen recording"

# Toggle hyprshift
bind = $mainMod SHIFT, bracketleft, exec, hyprshade toggle blue-light-filter

# Super-Tab to switch back and forth between two workspaces
bind = $mainMod, Tab, exec, $rofi -show window

# Reload Waybar
bind = $mainMod SHIFT, W, exec, pkill waybar && hyprctl dispatch exec waybar

# Toggle cliphist in fuzzel
# bind = $mainMod, C, exec, cliphist list | fuzzel -w 120 --dmenu | cliphist decode | wl-copy
bind = $mainMod, c, exec, $copyMenu

# Hyprexpo
$key = tab
$mod = alt
$reverse = shift

# alt-tab
# bind = $mod, $key, exec, hyprswitch gui --mod-key $mod --key $key --close mod-key-release --reverse-key=mod=$reverse --sort-recent && hyprswitch dispatch
# bind = $mod $reverse, $key, exec, hyprswitch gui --mod-key $mod --key $key --close mod-key-release --reverse-key=mod=$reverse --sort-recent && hyprswitch dispatch -r

# bind = ALT, TAB, exec, ags toggle picker
# bind = ALT, TAB, submap, alt-tab
# submap=alt-tab
# # bind = ALT, TAB, exec, astal cycle-workspace
# bind = , Escape, submap, reset
# submap=reset

# Screenshot
bind = , print, exec, swscreenshot-gui
bind = CONTROL $mainMod, 3, exec, grim $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"

# Screenshot with selection
bind = CTRL, print, exec, grim -g "$(slurp)" $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"
bind = CTRL $mainMod, 4, exec, grim -g "$(slurp)" $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png') && notify-send "Screenshot saved"

# Screenshot with selection
#bind = CTRL SHIFT, print, exec, grim -g "$(slurp)" $(xdg-user-dir)/Pictures/Screenshots/$(date +'%s_grim.png')

# Exit hyprland
#bind = $mainMod CONTROL ALT, M, exec, loginctl terminate-session "$XDG_SESSION_ID"
bind = $mainMod CONTROL ALT, M, exec, wlogout

# Lock hyprland
bind = $mainMod CONTROL ALT, L, exec, $hyprlock

# Move focus with mainMod + hjkl/arrow keys
bind = $mainMod, H, hy3:movefocus, l
bind = $mainMod, L, hy3:movefocus, r
bind = $mainMod, K, hy3:movefocus, u
bind = $mainMod, J, hy3:movefocus, d
bind = $mainMod, left, hy3:movefocus, l
bind = $mainMod, right, hy3:movefocus, r
bind = $mainMod, up, hy3:movefocus, u
bind = $mainMod, down, hy3:movefocus, d

# bind = $mainMod, W, hyprctl dispatch overview:toggle

# Groups
#bind = $mainMod, T, togglegroup
bind = $mainMod, T, hy3:makegroup, tab
bind = $mainMod, U, hy3:changegroup, untab
bind = $mainMod, G, hy3:locktab
# bind = $mainMod, L, changegroupactive, f
# bind = $mainMod, H, changegroupactive, b

# Move windows around with mainMod+shift+hjkl/arrow keys
bind = $mainMod SHIFT, H, hy3:movewindow, l
bind = $mainMod SHIFT, L, hy3:movewindow, r
bind = $mainMod SHIFT, K, hy3:movewindow, u
bind = $mainMod SHIFT, J, hy3:movewindow, d
bind = $mainMod SHIFT, left, hy3:movewindow, l
bind = $mainMod SHIFT, right, hy3:movewindow, r
bind = $mainMod SHIFT, up, hy3:movewindow, u
bind = $mainMod SHIFT, down, hy3:movewindow, d

# Enter resize mode with $mainMod+$
bind = $mainMod, R, submap, resize
submap=resize
bind = , H, resizeactive, -5% 0%
bind = , J, resizeactive, 0% -5%
bind = , K, resizeactive, 0% 5%
bind = , L, resizeactive, 5% 0%
bind = , equal, resizeactive, 5% 5%
bind = , minus, resizeactive, -5% -5%
bind = , Return, submap, reset
bind = , Escape, submap, reset
submap=reset

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move left or right with mainMod + P/N
bind = $mainMod, N, workspace, e+1
bind = $mainMod, P, workspace, e-1

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspacesilent, 1
bind = $mainMod SHIFT, 2, movetoworkspacesilent, 2
bind = $mainMod SHIFT, 3, movetoworkspacesilent, 3
bind = $mainMod SHIFT, 4, movetoworkspacesilent, 4
bind = $mainMod SHIFT, 5, movetoworkspacesilent, 5
bind = $mainMod SHIFT, 6, movetoworkspacesilent, 6
bind = $mainMod SHIFT, 7, movetoworkspacesilent, 7
bind = $mainMod SHIFT, 8, movetoworkspacesilent, 8
bind = $mainMod SHIFT, 9, movetoworkspacesilent, 9
bind = $mainMod SHIFT, 0, movetoworkspacesilent, 10

# Example special workspace (scratchpad)
bind = $mainMod, grave, togglespecialworkspace, magic
bind = $mainMod SHIFT, grave, movetoworkspacesilent, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod SHIFT, mouse:272, resizewindow
bindm = $mainMod, mouse:273, resizewindow

# Laptop multimedia keys with visual feedback from swayosd
bind = ,XF86AudioLowerVolume, exec, pactl -- set-sink-volume 0 -10%
bind = ,XF86AudioRaiseVolume, exec, pactl -- set-sink-volume 0 +10%
bind = ,XF86AudioMute, exec, pactl -- set-sink-mute 0 toggle
bind = ,XF86AudioMicMute, exec, pactl -- set-source-mute 0 toggle
bindl = ,XF86MonBrightnessDown, exec, brightnessctl s 5%-
bindl = ,XF86MonBrightnessUp, exec, brightnessctl s +5%

#bindel = ,XF86AudioRaiseVolume, exec, swayosd-client --output-volume raise
#bindel = ,XF86AudioLowerVolume, exec, swayosd-client --output-volume lower
#bindel = ,XF86AudioMute, exec, swayosd-client --output-volume mute-toggle
#bindel = ,XF86AudioMicMute, exec, swayosd-client --input-volume mute-toggle
#bindel = ,XF86MonBrightnessUp, exec, swayosd-client --brightness=+10
#bindel = ,XF86MonBrightnessDown, exec, swayosd-client --brightness=-10

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous


