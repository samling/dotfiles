#############
### Notes ###
#############

# bind-key -r = repeatable within interval defined by repeat-time
# bind-key -n = keybind does not require the leader
# bind-key -T <name> = keybind applies to keytable <name>

#################################
### Unbind keys we don't want ###
#################################

unbind-key -a

########################
### RESTORE DEFAULTS ###
########################

bind-key [ copy-mode
bind-key ] paste-buffer
bind-key : command-prompt

##############
### BASICS ###
##############

# Set default shell
set -g default-shell $SHELL

# Set default terminal
set -g default-terminal "tmux-256color"

# Use 256-color schemes
set -ga terminal-overrides ",xterm-256color*:Tc"
set -g xterm-keys on
setw -g xterm-keys on

# Enable Ms capability
set -as terminal-features ',rxvt-unicode-256color:clipboard'
set -as terminal-features ',screen-256color:clipboard'
set -as terminal-features ',tmux-256color:clipboard'

# Start windows and panes at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

# Set display-panes timeout to 3000ms
set -g display-panes-time 3000

# Set repeat timeout to 1000ms
set -g repeat-time 3000

# Enable mouse resizing
set -g mouse on

# Set "leader" key to be C-a instead of C-b, like screen
set -g prefix C-a

# Use vim keybindings in copy mode
set -g mode-keys vi

# Don't lag when esc'ing out of insert mode in vim
set -sg escape-time 0

# Set a screensaver
set -g lock-after-time 600
set -g lock-command "cmatrix -s -a"

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection

# set -s copy-command "xclip -i -f -selection primary | xclip -i -selection clipboard"
set -s copy-command 'xsel -i'
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -i"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -i"

# Set history limit
set -g history-limit 10000

# Set default copy behavior
set-option -g set-clipboard on

# Set border colors
set-option -g pane-active-border-style fg=colour4,bg=default
set-option -g pane-border-style fg=colour240,bg=default

# Set titles for terminal applications
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #H] #w'

# Maintain gapless sequence of window numbers
set-option -g renumber-windows on

# Don't end session with ctrl-d by requiring ctrl-d to be hit 10,000 times in succession before
# prompting to close the session
set-environment -g 'IGNOREEOF' 10000

##################
### STATUS BAR ###
##################

# toggle commands on/off for the local tmux session with F12
# set prefix to None instead to completely disable bindings
bind -T root F12  \
  set prefix C-a \;\
  set key-table locked \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T locked F12 \
  set -u prefix \;\
  set -u key-table \;\
  refresh-client -S

is_ssh_session='#(if [[ -n $SSH_CLIENT ]]; then echo "hello"; fi)'

set-window-option -g window-status-format '#[fg=#FFFFFF]  #I #[fg=#FFFFFF]#W  '
set-window-option -g window-status-style 'bold'
set-window-option -g window-status-current-format '#[fg=colour4,bg=default]#[fg=#000000,italics,bg=colour4] #I #[fg=#000000]#W #[fg=colour4,bg=default]'
set-window-option -g window-status-current-style 'bold'

sshhostname="#(~/.tmux/scripts/ssh_hostname.sh) "
prefixhighlight="#{prefix_highlight} "
gitstatus="#(gitmux -cfg ~/.gitmux.conf #{pane_current_path})#[bold] "
kubestatus="#[fg=white]#(/bin/bash ~/.tmux/kube-tmux/kube.tmux 250 '#cba6f7' 'colour4') "
session="#[fg=#cba6f7,bg=default]#[fg=colour0,bg=#cba6f7]☰ #(tmux display-message -p #S#[fg=#cba6f7,bg=default]) "
datetime="#(date +%%H:%%M) "
keytable="#(~/.tmux/scripts/keytable.sh #{client_key_table}) "

set -g status-left "$sshhostname$keytable"
set -g status-left-style "bold"

set -g status-right "$gitstatus$kubestatus$session$datetime"
set -g status-right-style 'bold'

set -g allow-rename off
set -g message-style fg=white,bg=default,bright
set -g status-bg default
set -g status-style default
set -g status-interval 2 # Refresh tmux every 2 seconds
set -g status-justify left
set -g status-position bottom
set -g status-left-length 100
set -g status-right-length 100

# Set mode style
set-option -g mode-style bg=colour4,fg=black

##################
### NAVIGATION ###
##################

# Rebind movement keys to vim style
bind h select-pane -L\; refresh-client -S
bind j select-pane -D\; refresh-client -S
bind k select-pane -U\; refresh-client -S
bind l select-pane -R\; refresh-client -S

# Resize panes with HJKL
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

### START NVIM-TMUX-NAVIGATION
###
# Bindings below are for compatibility with nvim-tmux-navigation
# https://github.com/alexghergh/nvim-tmux-navigation

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+\; refresh-client -S'

bind-key -T copy-mode-vi 'C-h' select-pane -L\; refresh-client -S
bind-key -T copy-mode-vi 'C-j' select-pane -D\; refresh-client -S
bind-key -T copy-mode-vi 'C-k' select-pane -U\; refresh-client -S
bind-key -T copy-mode-vi 'C-l' select-pane -R\; refresh-client -S
bind-key -T copy-mode-vi 'C-\' select-pane -l\; refresh-client -S
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+\; refresh-client -S
###
### END NVIM-TMUX-NAVIGATION

# Rebind mod key + n/p to move to prev/next tabs
bind -n C-n next-window
bind -n C-p previous-window

#############
### PANES ###
#############

# Cycle through pane layouts
bind-key Space next-layout

# Create/toggle floating pane
bind f if-shell -F '#{==:#{session_name},scratch}' {
  detach-client
} {
  display-popup -E "tmux new-session -A -s scratch"
}

# Break out current pane into new window
bind b confirm-before -p "Break out pane into new window?" break-pane

# Capture what's visible in the pane and edit it in nvim
bind e run "tmux capture-pane -S 0 -p -J > /tmp/tmux-edit && tmux new-window 'nvim /tmp/tmux-edit'"
# Capture everything in the scroll buffer for the current pane and edit it in nvim
bind E run "tmux capture-pane -S - -p -J > /tmp/tmux-edit && tmux new-window 'nvim /tmp/tmux-edit'"

# Split panes
bind d split-window -h -c '#{pane_current_path}'
bind D split-window -v -c '#{pane_current_path}'

# Use 'w' as the close pane key
bind w confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Sync all panes
bind z setw synchronize-panes;\
    set-option -ag status-right '#{?pane_synchronized, #[fg=yellow]«Synced»#[default],} ';

# Swap any pane with any other pane
bind V display-panes \; command-prompt -p "Swap pane:, with pane": "swap-pane -s '%1' -t '%2'"

# Swap panes left or right
bind-key m switch-client -Tmove
bind-key -Tmove -r h swap-pane -d -t -1
bind-key -Tmove -r l swap-pane -d -t +1

# Toggle maximize single pane
bind-key Z resize-pane -Z;\
    set-option -ag status-right '#{?window_zoomed_flag, #[fg=yellow][FULLSCREEN]#[default],} ';

###############
### WINDOWS ###
###############

# Add M-[0-9] for switching windows (On Windows, M = Alt)
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9
bind-key -n M-0 select-window -t :10

# Create new window
bind t new-window -c ~/

# Rename window
bind T command-prompt -p "Rename window #W": "rename-window '%%'"

# Capital 'W' as close window/tab key, to keep things simple
bind W confirm-before -p "kill-window #W? (y/n)" kill-window

################
### SESSIONS ###
################

# Detach session
bind x detach

# Interactively switch sessions; open with windows collapsed
bind s choose-tree -wZ

# Rename session
bind S command-prompt -p "Rename session:" "rename-session '%%'"

# Create new session
bind n command-prompt -p "Session name:" "new-session -s %% -c ~/"

# Kill session
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session

#############
### OTHER ###
#############

# Reload configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Fix undercurls in nvim
# Undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

###############
### Plugins ###
###############

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'fcsonline/tmux-thumbs'

# Plugin Options
set -g @net_speed_interfaces "en0"

set -g @online_icon "#[fg=green]#(dig +short myip.opendns.com @resolver1.opendns.com)#[fg=white]"
set -g @offline_icon "#[fg=red]!WAN#[fg=white]"

set -g @prefix_highlight_output_prefix '#[fg=#cba6f7]#[bg=default]#[bg=#cba6f7]#[fg=black]'
set -g @prefix_highlight_output_suffix '#[fg=#cba6f7]#[bg=default] '

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-dir '~/.tmux-continuum-sessions'

set -g @continuum-restore 'off'

run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux

set -g @thumbs-key y
set -g @thumbs-command 'echo -n {} | xclip -i -selection clipboard'
set -g @thumbs-bg-color black
set -g @thumbs-fg-color blue
set -g @thumbs-hint-bg-color blue
set -g @thumbs-hint-fg-color black
set -g @thumbs-select-bg-color black
set -g @thumbs-select-fg-color blue

if-shell "uname -s | grep -q Linux" "source-file ~/dotfiles/tmux/.tmux-linux"
if-shell "uname -s | grep -q Darwin" "source-file ~/dotfiles/tmux/.tmux-macos"

# Make sure this line is last
run -b '~/.tmux/plugins/tpm/tpm'
