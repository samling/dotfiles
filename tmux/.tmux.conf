#########################################
### Unbinds to make way for rebinding ###
#########################################

unbind %
unbind '"'
unbind &
unbind ,
unbind a
unbind A
unbind b
unbind B
unbind c
unbind C
unbind d
unbind D
unbind f
unbind F
unbind s
unbind T
unbind v
unbind V
unbind w
unbind W
unbind x
unbind X
unbind z
unbind -n M-Left
unbind -n M-Right
# vim movement keys
unbind h
unbind j
unbind k
unbind l
unbind H
unbind J
unbind K
unbind L

##############
### BASICS ###
##############

# Use 256-color schemes
set -ga terminal-overrides ",xterm-256color*:Tc"
set -g xterm-keys on
setw -g xterm-keys on

# Start windows and panes at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

# Set display-panes timeout to 3000ms
set display-panes-time 3000

# Enable mouse resizing
set -g mouse on

# Set "leader" key to be C-a instead of C-b, like screen
set -g prefix C-a

# Use vim keybindings in copy mode
set -g mode-keys vi

# Don't lag when esc'ing out of insert mode in vim
set -sg escape-time 0

# Set a screensaver
set -g lock-after-time 600
set -g lock-command "cmatrix -s -a"

# Setup 'v' to begin selection as in Vim
# TODO: Fix this
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i selection clipboard"

# Set history limit
set -g history-limit 100000

# Set the bar
setw -g window-status-style fg="#666666",bg=default,default
setw -g window-status-current-style fg=cyan,bg=default,default
setw -g window-status-format         '#[fg=white]#I) #[fg=white]#W '
setw -g window-status-current-format '#[fg=white]#I) #[fg=cyan]#W '
setw -g window-status-style fg=cyan,bg=default
set -g status-left ' '
set -g status-right '#[fg=yellow][#(tmux display-message -p "#S")]#{prefix_highlight} #[fg=green]#(/bin/bash $HOME/dotfiles/tmux/local-plugins/aws-statusbar/aws.tmux) #[fg=white]#(/bin/bash $HOME/.tmux/kube-tmux/kube.tmux 250 red cyan) | #(TZ="America/Los_Angeles" date +"%%Y-%%m-%%d %%H:%%M")'
set -g allow-rename off
set -g message-style fg=white,bg=black,bright
#set -g status-bg black
set -g status-style default
set -g status-interval 2 # Refresh tmux every 2 seconds
set -g status-justify left
set -g status-position bottom
set -g status-right-length 100

# Set default copy behavior
set-option -g default-shell $SHELL
set-option -g set-clipboard on
#set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Set border colors
set-option -g pane-active-border-style fg=cyan,bg=default
set-option -g pane-border-style fg=colour240,bg=default

# Set titles for terminal applications
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #H] #w'

# Don't end session with ctrl-d by requiring ctrl-d to be hit 10,000 times in succession before
# prompting to close the session
set-environment -g 'IGNOREEOF' 10000

#############
### PANES ###
#############

# Rebind movement keys to vim style
bind h select-pane -L\; refresh-client -S
bind j select-pane -D\; refresh-client -S
bind k select-pane -U\; refresh-client -S
bind l select-pane -R\; refresh-client -S

# Resize panes with HJKL
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Rebind mod key + vim keys to switch panes
bind -n C-h select-pane -L\; refresh-client -S
bind -n C-j select-pane -D\; refresh-client -S
bind -n C-k select-pane -U\; refresh-client -S
bind -n C-l select-pane -R\; refresh-client -S

# Rebind mod key + n/p to move to prev/next tabs
bind -n C-n next-window
bind -n C-p previous-window

# Preset pane arrangements
# Quadrants
bind f split-window -c '#{pane_current_path}' \; select-pane -t 1 \; split-window -h -c '#{pane_current_path}' \; select-pane -t 3 \; split-window -h -c '#{pane_current_path}' \; select-pane -t 1
bind F split-window \; select-pane -t 1 \; split-window -h \; select-pane -t 3 \; split-window -h \; select-pane -t 1

# Change index number of tabs with N
bind N command-prompt -p "Change window number to": "move-window -t '%1'"  

# Break out current pane into new window
bind b confirm-before -p "Break out pane into new window?" break-pane

# Split panes like in iTerm2
bind d split-window -h -c '#{pane_current_path}'
bind D split-window -v -c '#{pane_current_path}'

# Close all but the current pane
bind c confirm-before -p "Kill all other panes? (y/n)" "kill-pane -a"
bind C kill-pane -a

# Use 'w' as the close pane key, like Chrome/iTerm2
bind w confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Sync all panes
bind z setw synchronize-panes;\
    set-option -ag status-right '#{?pane_synchronized, #[fg=yellow]«Synced» #[default] ,} ';

# Swap any pane with pane 0
bind v display-panes \; command-prompt -p "Swap pane 1 with pane": "swap-pane -s '%1' -t 1"

# Swap any pane with any other pane
bind V display-panes \; command-prompt -p "Swap pane:, with pane": "swap-pane -s '%1' -t '%2'"

# Toggle maximize single pane
bind-key | resize-pane -Z

###############
### WINDOWS ###
###############

# Add M-[1-9] for switching windows (On Windows, M = Alt)
bind-key -n M-0 select-window -t :0
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Create new window
bind T new-window
##bind -n M-T new-window

# Rename window
bind R command-prompt -p "Rename window #W": "rename-window '%%'"
##bind -n M-R command-prompt -p "Rename window #W": "rename-window '%%'"

# Capital 'W' as close window/tab key, to keep things simple
bind W confirm-before -p "kill-window #W? (y/n)" kill-window
##bind -n M-W confirm-before -p "kill-window #W? (y/n)" kill-window

################
### SESSIONS ###
################

# Detach session
bind x detach

# Interactively reattach to session
#bind a split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Interactively switch sessions
bind s choose-session

# Create new session
bind S command-prompt -p "Session name:" "new-session -s %%"

# Kill session
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
#bind -n M-Q confirm-before -p "kill-session #S? (y/n)" kill-session

#############
### OTHER ###
#############

# Reload configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

###############
### Plugins ###
###############
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
#set -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-cpu'
#set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'tmux-plugins/tmux-net-speed'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Plugin Options
set -g @net_speed_interfaces "en0"
set -g @online_icon "#[fg=green]#(dig +short myip.opendns.com @resolver1.opendns.com)#[fg=white]"
set -g @offline_icon "#[fg=red]!WAN#[fg=white]"
set -g @prefix_highlight_fg 'black'
set -g @prefix_highlight_bg 'blue'
set -g @prefix_highlight_output_prefix '('
set -g @prefix_highlight_output_suffix ')'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-dir '/home/sboynton/.tmux-continuum-sessions'
set -g @continuum-restore 'off'

# Make sure this line is last
run -b '~/.tmux/plugins/tpm/tpm'
