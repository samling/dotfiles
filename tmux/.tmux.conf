##############
### BASICS ###
##############

# Powerline
#run-shell "powerline-daemon -q"
#source "/usr/local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"

# Use 256-color schemes
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
if '[ -n $ITERM_SESSION_ID ]' 'set -g terminal-overrides \'*88col*:colors=88,\
*256col*:colors=256,xterm*:XT:Cs=\E]Pl%p1%s\E\\:Ss=\E]50;CursorShape=%d\007\''
set-option -g xterm-keys on
set-window-option -g xterm-keys on

# Start windows and panes at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1

# Set display-panes timeout to 1000ms
set display-panes-time 1000

# Enable mouse resizing
set -g mouse on

# Set "leader" key to be C-a instead of C-b, like screen
unbind C-b
#set -g prefix C-a
set -g prefix C-b
#bind-key C-a last-window

# Use vim keybindings in copy mode
set -g mode-keys vi

# Don't lag when esc'ing out of insert mode in vim
set -sg escape-time 0

# Setup 'v' to begin selection as in Vim
# TODO: Fix this
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"

# Update default binding of 'Enter' to also use copy-pipe
#unbind -t vi-copy Enter
#bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Set history limit
set -g history-limit 50000

# Set the bar
set-window-option -g window-status-fg "#666666"
set-window-option -g window-status-bg "#292929"
set-window-option -g window-status-attr default
set-window-option -g window-status-current-fg cyan
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr default
set-option -g message-fg white
set-option -g message-bg black
set-option -g message-attr bright
set-option -g allow-rename off
set -g status-left ""
set -g status-justify left
set-option -g status-position bottom
setw -g window-status-format         '#[fg=white]#I) #[fg=default]#W '
setw -g window-status-current-format '#[fg=white]#I) #[fg=default]#W '
#set -g status-right "#[fg=yellow]#{?pane_synchronized,«Synced» ,}#[fg=magenta]#{?window_zoomed_flag,«Zoomed» ,}#[fg=white]#{prefix_highlight} #[fg=green]#(curl ipinfo.io/ip)#[fg=white] #[fg=cyan]•#[fg=yellow] #(ifconfig en0 | if "grep" -q 'inet\ '; then ifconfig en0 | grep 'inet\ ' | awk '{printf $2}'; elif ifconfig en4 | "grep" -q 'inet'; then ifconfig en4 | "grep" 'inet\ ' | awk '{print $2}'; elif ifconfig en6 | "grep" -q 'inet'; then ifconfig en6 | "grep" 'inet\ ' | awk '{print $2}'; else echo '!LAN'; fi)#[fg=white] #[fg=cyan]•#[fg=white] %A %m-%d-%Y #[fg=cyan]•#[fg=white] %H:%M #[fg=cyan]•#[fg=white,bold] #{battery_percentage}#[fg=white]"
#set -g status-right "#{prefix_highlight}#[fg=green]#(curl ipinfo.io/ip)#[fg=white] #[fg=cyan]•#[fg=yellow] #(ifconfig enp6s0 | if "grep" -q 'inet\ '; then ifconfig enp6s0 | grep 'inet\ ' | awk '{printf $2}' | sed -e 's/addr://g'; elif ifconfig en4 | "grep" -q 'inet'; then ifconfig en4 | "grep" 'inet\ ' | awk '{print $2}'; else echo '!LAN'; fi)#[fg=white] #[fg=cyan]•#[fg=white] %A %m-%d-%Y #[fg=cyan]•#[fg=white] %H:%M "
set -g status-right ""
set -g status-bg "#292929"
set -g status-right-length 100
#set -g status-fg colour214
#set -g status-left '#[fg=black](#S) #(whoami)@#H#[default]'
#set -g status-right '#[fg=black]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=black]%H:%M#[default]'
#set-option -g status on
set-option -g status-interval 2 # Refresh tmux every 2 seconds
#set-option -g status-left-length 60
#set-option -g status-right-length 90
#set-option -g status-left "#(~/dotfiles/tmux/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/dotfiles/tmux/tmux-powerline/powerline.sh right)"
#setw -g window-status-format "#[fg=colour214]#[bg=colour235] #I #[bg=colour235]#[fg=white] #W "
#setw -g window-status-current-format "#[bg=colour238]#[fg=colour214] #I #[fg=white]#[bg=colour238] #W "

# Set default copy behavior
set-option -g default-shell $SHELL
set-option -g set-clipboard on
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Set border colors
set-option -g pane-active-border-fg cyan
set-option -g pane-active-border-bg default
set-option -g pane-border-fg colour240

# Set vi-like motions in tmux
# set-window-option -g mode-keys vi

# Set titles for terminal applications
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #H] #w'

#########################################
### Unbinds to make way for rebinding ###
#########################################

unbind %
unbind '"'
unbind &
unbind ,
unbind a
unbind A
unbind c
unbind C
unbind d
unbind D
unbind f
unbind F
unbind s
unbind T
unbind v
unbind V
unbind w
unbind W
unbind x
unbind X
# vim movement keys
unbind h
unbind j
unbind k
unbind l
unbind H
unbind J
unbind K
unbind L
# Don't end session with ctrl-d by requiring ctrl-d to be hit 10,000 times in succession before
# prompting to close the session
set-environment -g 'IGNOREEOF' 10000

############################
### PANE/WINDOW OVERVIEW ###
############################

# Pane/Tab keys are as follows:
# (Prefix = Pr)
# (Window = Tab in functionality)
#
# Pr-d/D - Split tab horizontal/vertical
# Pr-w - Close pane
#
# Pr-T - New tab
# Pr-W - Close tab
# Pr-[1-9] - Choose tab 1-9

#############
### PANES ###
#############

# Rebind movement keys to vim style
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes with HJKL
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Rebind mod key + vim keys to switch panes
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Preset pane arrangements
# Quadrants
bind f split-window -c '#{pane_current_path}' \; select-pane -t 1 \; split-window -h -c '#{pane_current_path}' \; select-pane -t 3 \; split-window -h -c '#{pane_current_path}' \; select-pane -t 1
bind F split-window \; select-pane -t 1 \; split-window -h \; select-pane -t 3 \; split-window -h \; select-pane -t 1

# Change index number of tabs with N
bind N command-prompt -p "Change window number to": "move-window -t '%1'"  

# Split panes like in iTerm2
bind d split-window -h -c '#{pane_current_path}'
bind D split-window -v -c '#{pane_current_path}'
##bind -n M-d split-window -h
##bind -n M-D split-window -v

# Close all but the current pane
bind c confirm-before -p "Kill all other panes? (y/n)" "kill-pane -a"
bind C kill-pane -a

# Use 'w' as the close pane key, like Chrome/iTerm2
bind w confirm-before -p "kill-pane #P? (y/n)" kill-pane
##bind -n M-w kill-pane

# Sync all panes
bind s setw synchronize-panes;#\
    set-option -ag status-left '#{?pane_synchronized, #[fg=yellow]«Synced» #[default] ,} ';

# Swap any pane with pane 0
bind v display-panes \; command-prompt -p "Swap pane 1 with pane": "swap-pane -s '%1' -t 1"
##bind -n M-v display-panes \; command-prompt -p "Swap pane 1 with pane": "swap-pane -s '%1' -t 1"

# Swap any pane with any other pane
bind V display-panes \; command-prompt -p "Swap pane:, with pane": "swap-pane -s '%1' -t '%2'"
##bind -n M-V display-panes \; command-prompt -p "Swap pane:, with pane": "swap-pane -s '%1' -t '%2'"

# Toggle maximize single pane
bind-key | resize-pane -Z

###############
### WINDOWS ###
###############

# Add M-[1-9] for switching windows
bind-key -n M-0 select-window -t :0
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

# Create new window
bind T new-window
##bind -n M-T new-window

# Rename window
bind R command-prompt -p "Rename window #W": "rename-window '%%'"
##bind -n M-R command-prompt -p "Rename window #W": "rename-window '%%'"

# Capital 'W' as close window/tab key, to keep things simple
bind W confirm-before -p "kill-window #W? (y/n)" kill-window
##bind -n M-W confirm-before -p "kill-window #W? (y/n)" kill-window

################
### SESSIONS ###
################

# Detach session
bind x detach
##bind -n M-x detach

# Kill session
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
#bind -n M-Q confirm-before -p "kill-session #S? (y/n)" kill-session

#############
### OTHER ###
#############

# ":" key for tmux command line
##bind -n M-: command-prompt

# "?" key for help
##bind -n M-? list-keys

# Reload configuration
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
##bind -n M-r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Show time
##bind -n M-t clock-mode

##################
### UnbindOnce ###
##################
# Use to unbind keys specified above

##unbind -n M-:
##unbind -n M-?
##unbind -n M-0
##unbind -n M-1
##unbind -n M-2
##unbind -n M-3
##unbind -n M-4
##unbind -n M-5
##unbind -n M-6
##unbind -n M-7
##unbind -n M-8
##unbind -n M-9
##unbind -n M-D
##unbind -n M-Q
##unbind -n M-R
##unbind -n M-T
##unbind -n M-V
##unbind -n M-W
##unbind -n M-d
##unbind -n M-r
##unbind -n M-t
##unbind -n M-v
##unbind -n M-w
##unbind -n M-x
unbind -n M-Left
unbind -n M-Right

###############
### Plugins ###
###############
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @plugin 'tmux-plugins/tmux-battery'
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-sidebar'
#set -g @plugin 'tmux-plugins/tmux-net-speed'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'tmux-plugins/tmux-online-status'
set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-sensible'

# Plugin Options
set -g @net_speed_interfaces "en0"
set -g @online_icon "#[fg=green]#(dig +short myip.opendns.com @resolver1.opendns.com)#[fg=white]"
set -g @offline_icon "#[fg=red]!WAN#[fg=white]"
set -g @prefix_highlight_fg 'cyan'
set -g @prefix_highlight_bg '#292929'
set -g @prefix_highlight_output_prefix '('
set -g @prefix_highlight_output_suffix ')'
#set -g @continuum-restore 'on'

#run-shell /Users/sboynton/Documents/Programming/CLI/tmux-net-speed/net_speed.tmux

# Make sure this line is last
run '~/dotfiles/tmux/tpm/tpm'

#################
### Functions ###
#################



