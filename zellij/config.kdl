// THIS FILE WAS AUTOGENERATED BY ZELLIJ, THE PREVIOUS FILE AT THIS LOCATION WAS COPIED TO: /home/sboynton/.config/zellij/config.kdl.bak
//

keybinds clear-defaults=true {
    // Some effort has been made to emulate tmux bindings by using the 'pane' mode as a jumping-off point

    //=== Global bindings
    //
    shared_except "locked" {
        // Movement
        bind "Ctrl left" { MoveFocus "left"; SwitchToMode "normal"; }
        bind "Ctrl down" { MoveFocus "down"; SwitchToMode "normal"; }
        bind "Ctrl up" { MoveFocus "up"; SwitchToMode "normal"; }
        bind "Ctrl right" { MoveFocus "right"; SwitchToMode "normal"; }
        bind "Ctrl h" { MoveFocus "left"; SwitchToMode "normal"; }
        bind "Ctrl j" { MoveFocus "down"; SwitchToMode "normal"; }
        bind "Ctrl k" { MoveFocus "up"; SwitchToMode "normal"; }
        bind "Ctrl l" { MoveFocus "right"; SwitchToMode "normal"; }

        // Tabs
        bind "Ctrl p" { GoToPreviousTab; SwitchToMode "normal"; }
        bind "Ctrl n" { GoToNextTab; SwitchToMode "normal"; }

        // Plugins
        // bind "Ctrl y" {
        //   LaunchOrFocusPlugin "file:~/dotfiles/zellij/plugins/zellij_forgot.wasm" {
        //     "LOAD_ZELLIJ_BINDINGS" "true"
        //     floating true
        //   }
        // }

        // Locked mode...just in case
        bind "Ctrl g" { SwitchToMode "locked"; }

        // Quit
        bind "Ctrl q" { Quit; }
    }

    //=== Get us back to normal mode
    //
    shared_except "normal" "locked" {
      bind "Esc" { SwitchToMode "normal"; }
      bind "Ctrl c" { SwitchToMode "normal"; }
    }

    //=== Switch between modes
    //
    // ctrl +
    //   a -> pane
    //   t -> tab
    //   m -> move
    //   s -> session
    shared_except "locked" "pane" {
        bind "Ctrl a" { SwitchToMode "pane"; }
    }

    //=== shared_except - binds that are shared everywhere except the listed modes
    //
    // shared_except "locked" "tab" {
    //     bind "Ctrl t" { SwitchToMode "tab"; }
    // }

    //=== shared_among - binds that are shared only among the listed modes
    //
    shared_among "pane" "scroll" {
        bind "e" { EditScrollback; SwitchToMode "normal"; }
    }

    locked {
        bind "Ctrl g" { SwitchToMode "normal"; }
    }

    //=== single entry point
    //
    pane {
        // Floating
        bind "f" { ToggleFloatingPanes; SwitchToMode "normal"; }
        bind "F" { TogglePaneEmbedOrFloating; SwitchToMode "normal"; }

        // Frames
        bind "'" { TogglePaneFrames; SwitchToMode "normal"; }

        // Layout
        bind "Alt [" { PreviousSwapLayout; SwitchToMode "normal"; }
        bind "Alt ]" { NextSwapLayout; SwitchToMode "normal"; }
        bind "Space" { NextSwapLayout; SwitchToMode "normal"; }

        // Movement
        bind "h" { MoveFocus "left"; SwitchToMode "normal"; }
        bind "j" { MoveFocus "down"; SwitchToMode "normal"; }
        bind "k" { MoveFocus "up"; SwitchToMode "normal"; }
        bind "l" { MoveFocus "right"; SwitchToMode "normal"; }

        //bind "y" { TogglePaneFrames; SwitchToMode "normal"; }

        bind "Shift p" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            };
            SwitchToMode "Normal"
        }
        // Panes
        bind "n" { NewPane; SwitchToMode "normal"; }
        bind "w" { CloseFocus; SwitchToMode "normal"; }

        // Resize
        bind "Shift h" { Resize "Increase left"; }
        bind "Shift j" { Resize "Increase down"; }
        bind "Shift k" { Resize "Increase up"; }
        bind "Shift l" { Resize "Increase right"; }

        // Session manager
        bind "s" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }

        bind "p" {
            LaunchOrFocusPlugin "plugin-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }

        // Splits
        bind "d" { NewPane "right"; SwitchToMode "normal"; }
        bind "D" { NewPane "down"; SwitchToMode "normal"; }

        // Switch to other modes
        bind "?" { SwitchToMode "entersearch"; }
        bind "r" { SwitchToMode "resize"; }
        bind "m" { SwitchToMode "move"; }
        bind "[" { SwitchToMode "scroll"; }
        bind "Ctrl [" { SwitchToMode "scroll"; } // handle occasional misfires on key rollover

        // Sync tabs
        bind "Z" { ToggleActiveSyncTab; SwitchToMode "normal"; }

        // Tabs
        bind "t" { NewTab; SwitchToMode "normal"; }
        bind "T" { SwitchToMode "renametab"; TabNameInput 0; }
        bind "W" { CloseTab; SwitchToMode "normal"; }
        bind "1" { GoToTab 1; SwitchToMode "normal"; }
        bind "2" { GoToTab 2; SwitchToMode "normal"; }
        bind "3" { GoToTab 3; SwitchToMode "normal"; }
        bind "4" { GoToTab 4; SwitchToMode "normal"; }
        bind "5" { GoToTab 5; SwitchToMode "normal"; }
        bind "6" { GoToTab 6; SwitchToMode "normal"; }
        bind "7" { GoToTab 7; SwitchToMode "normal"; }
        bind "8" { GoToTab 8; SwitchToMode "normal"; }
        bind "9" { GoToTab 9; SwitchToMode "normal"; }

        // Zoom
        bind "z" { ToggleFocusFullscreen; SwitchToMode "normal"; }

        // Leave mode
        bind "Ctrl a" { SwitchToMode "normal"; }
    }

    tab {
        bind "1" { GoToTab 1; SwitchToMode "normal"; }
        bind "2" { GoToTab 2; SwitchToMode "normal"; }
        bind "3" { GoToTab 3; SwitchToMode "normal"; }
        bind "4" { GoToTab 4; SwitchToMode "normal"; }
        bind "5" { GoToTab 5; SwitchToMode "normal"; }
        bind "6" { GoToTab 6; SwitchToMode "normal"; }
        bind "7" { GoToTab 7; SwitchToMode "normal"; }
        bind "8" { GoToTab 8; SwitchToMode "normal"; }
        bind "9" { GoToTab 9; SwitchToMode "normal"; }

        bind "[" { BreakPaneLeft; SwitchToMode "normal"; }
        bind "]" { BreakPaneRight; SwitchToMode "normal"; }
        bind "b" { BreakPane; SwitchToMode "normal"; }

        bind "t" { NewTab; SwitchToMode "normal"; }
        bind "T" { NewTab; SwitchToMode "Normal"; SwitchToMode "RenameTab"; TabNameInput 0; }
        //bind "T" { SwitchToMode "renametab"; TabNameInput 0; SwitchToMode "normal"; }
        //bind "T" { SwitchToMode "renametab"; TabNameInput 0; }

        bind "s" { ToggleActiveSyncTab; SwitchToMode "normal"; }

        bind "x" { CloseTab; SwitchToMode "normal"; }

        //bind "tab" { ToggleTab; SwitchToMode "normal"; }
        bind "Ctrl t" { SwitchToMode "normal"; }
    }

    resize {
        bind "left" { Resize "Increase left"; }
        bind "down" { Resize "Increase down"; }
        bind "up" { Resize "Increase up"; }
        bind "right" { Resize "Increase right"; }

        bind "+" { Resize "Increase"; }
        bind "=" { Resize "Increase"; }

        bind "-" { Resize "Decrease"; }

        bind "H" { Resize "Increase left"; }
        bind "J" { Resize "Increase down"; }
        bind "K" { Resize "Increase up"; }
        bind "L" { Resize "Increase right"; }
        bind "h" { Resize "Increase left"; }
        bind "j" { Resize "Increase down"; }
        bind "k" { Resize "Increase up"; }
        bind "l" { Resize "Increase right"; }
    }

    move {
        bind "left" { MovePane "left"; }
        bind "down" { MovePane "down"; }
        bind "up" { MovePane "up"; }
        bind "right" { MovePane "right"; }
        bind "h" { MovePane "left"; }
        bind "j" { MovePane "down"; }
        bind "k" { MovePane "up"; }
        bind "l" { MovePane "right"; }
        bind "n" { MovePane; }
        bind "p" { MovePaneBackwards; }
        bind "tab" { MovePane; }

        bind "Ctrl m" { SwitchToMode "normal"; }
    }

    scroll {
        bind "j" { ScrollDown; }
        bind "k" { ScrollUp; }

        bind "Ctrl u" { HalfPageScrollUp; }
        bind "Ctrl d" { HalfPageScrollDown; }
        bind "q" { SwitchToMode "normal"; }
        bind "?" { SwitchToMode "entersearch"; SearchInput 0; }

        //bind "e" { EditScrollback; SwitchToMode "normal"; } --> shared_among
    }

    search {
        bind "c" { SearchToggleOption "CaseSensitivity"; }
        bind "n" { Search "down"; }
        bind "o" { SearchToggleOption "WholeWord"; }
        bind "p" { Search "up"; }
        bind "w" { SearchToggleOption "Wrap"; }

        bind "q" { SwitchToMode "normal"; }
    }

    session {
        bind "d" { Detach; }

        bind "c" {
            LaunchOrFocusPlugin "configuration" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }
        bind "Ctrl o" { SwitchToMode "normal"; }

        bind "w" {
            LaunchOrFocusPlugin "session-manager" {
                floating true
                move_to_focused_tab true
            }
            SwitchToMode "normal"
        }
    }

    entersearch {
        //bind "Ctrl c" { SwitchToMode "scroll"; }
        //bind "esc" { SwitchToMode "scroll"; }
        bind "enter" { SwitchToMode "search"; }
    }

    renametab {
        bind "esc" { UndoRenameTab; SwitchToMode "tab"; }
        bind "Enter" { SwitchToMode "Normal"; }
    }

    renamepane {
        bind "esc" { UndoRenamePane; SwitchToMode "pane"; }
    }
}

// Plugin aliases - can be used to change the implementation of Zellij
// changing these requires a restart to take effect
plugins {
    compact-bar location="zellij:compact-bar"
    configuration location="zellij:configuration"
    filepicker location="zellij:strider" {
        cwd "/"
    }
    plugin-manager location="zellij:plugin-manager"
    session-manager location="zellij:session-manager"
    status-bar location="zellij:status-bar"
    strider location="zellij:strider"
    tab-bar location="zellij:tab-bar"
    welcome-screen location="zellij:session-manager" {
        welcome_screen false
    }
}

// Plugins to load in the background when a new session starts
// eg. "file:/path/to/my-plugin.wasm"
// eg. "https://example.com/my-plugin.wasm"
//load_plugins {
//  "file:~/dotfiles/zellij/plugins/zellij_forgot.wasm"
//}
 
// Use a simplified UI without special fonts (arrow glyphs)
// Options:
//   - true
//   - false (Default)
// 
// simplified_ui true
 
// Choose the theme that is specified in the themes section.
// Default: default
// 
theme "catppuccin-mocha"
 
// Choose the base input mode of zellij.
// Default: normal
// 
default_mode "normal"
 
// Choose the path to the default shell that zellij will use for opening new panes
// Default: $SHELL
// 
// default_shell "fish"
 
// Choose the path to override cwd that zellij will use for opening new panes
// 
// default_cwd "/tmp"
 
// The name of the default layout to load on startup
// Default: "default"
// 
// default_layout "compact"
 
// The folder in which Zellij will look for layouts
// (Requires restart)
// 
// layout_dir "/tmp"
 
// The folder in which Zellij will look for themes
// (Requires restart)
// 
// theme_dir "/tmp"
 
// Toggle enabling the mouse mode.
// On certain configurations, or terminals this could
// potentially interfere with copying text.
// Options:
//   - true (default)
//   - false
// 
// mouse_mode false
 
// Toggle having pane frames around the panes
// Options:
//   - true (default, enabled)
//   - false
// 
pane_frames false
 
// When attaching to an existing session with other users,
// should the session be mirrored (true)
// or should each user have their own cursor (false)
// (Requires restart)
// Default: false
// 
// mirror_session true
 
// Choose what to do when zellij receives SIGTERM, SIGINT, SIGQUIT or SIGHUP
// eg. when terminal window with an active zellij session is closed
// (Requires restart)
// Options:
//   - detach (Default)
//   - quit
// 
// on_force_close "quit"
 
// Configure the scroll back buffer size
// This is the number of lines zellij stores for each pane in the scroll back
// buffer. Excess number of lines are discarded in a FIFO fashion.
// (Requires restart)
// Valid values: positive integers
// Default value: 10000
// 
// scroll_buffer_size 10000
 
// Provide a command to execute when copying text. The text will be piped to
// the stdin of the program to perform the copy. This can be used with
// terminal emulators which do not support the OSC 52 ANSI control sequence
// that will be used by default if this option is not set.
// Examples:
//
// copy_command "xclip -selection clipboard" // x11
// copy_command "wl-copy"                    // wayland
// copy_command "pbcopy"                     // osx
// 
// copy_command "pbcopy"
 
// Choose the destination for copied text
// Allows using the primary selection buffer (on x11/wayland) instead of the system clipboard.
// Does not apply when using copy_command.
// Options:
//   - system (default)
//   - primary
// 
// copy_clipboard "primary"
 
// Enable automatic copying (and clearing) of selection when releasing mouse
// Default: true
// 
// copy_on_select true
 
// Path to the default editor to use to edit pane scrollbuffer
// Default: $EDITOR or $VISUAL
scrollback_editor "nvim"
 
// A fixed name to always give the Zellij session.
// Consider also setting `attach_to_session true,`
// otherwise this will error if such a session exists.
// Default: <RANDOM>
// 
// session_name "My singleton session"
 
// When `session_name` is provided, attaches to that session
// if it is already running or creates it otherwise.
// Default: false
// 
// attach_to_session true
 
// Toggle between having Zellij lay out panes according to a predefined set of layouts whenever possible
// Options:
//   - true (default)
//   - false
// 
// auto_layout false
 
// Whether sessions should be serialized to the cache folder (including their tabs/panes, cwds and running commands) so that they can later be resurrected
// Options:
//   - true (default)
//   - false
// 
session_serialization true
 
// Whether pane viewports are serialized along with the session, default is false
// Options:
//   - true
//   - false (default)
// 
// serialize_pane_viewport true
 
// Scrollback lines to serialize along with the pane viewport when serializing sessions, 0
// defaults to the scrollback size. If this number is higher than the scrollback size, it will
// also default to the scrollback size. This does nothing if `serialize_pane_viewport` is not true.
// 
// scrollback_lines_to_serialize 10000
 
// Enable or disable the rendering of styled and colored underlines (undercurl).
// May need to be disabled for certain unsupported terminals
// (Requires restart)
// Default: true
// 
// styled_underlines false
 
// How often in seconds sessions are serialized
// 
// serialization_interval 10000
 
// Enable or disable writing of session metadata to disk (if disabled, other sessions might not know
// metadata info on this session)
// (Requires restart)
// Default: false
// 
// disable_session_metadata false
 
// Enable or disable support for the enhanced Kitty Keyboard Protocol (the host terminal must also support it)
// (Requires restart)
// Default: true (if the host terminal supports it)
// 
// support_kitty_keyboard_protocol false
